name: Test Pipeline

on:
  push:
    branches: 
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:11.2
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install tools
        run: |
          dotnet tool install -g dotnet-sonarscanner
          dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Wait for MariaDB
        run: |
          timeout 60 bash -c 'until mysqladmin ping -h 127.0.0.1 -u ${{ vars.DATABASE_USER }} -p${{ secrets.DATABASE_PASSWORD }} --silent; do sleep 1; done'

      - name: Begin SonarQube Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"Ahrem_ProjectKey" \
            /d:sonar.host.url="${{ vars.SONARQUBE_URL }}" \
            /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}" \
            /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml" \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.qualitygate.timeout=300

      - name: Build
        run: dotnet build

      - name: Run Tests and Generate Report
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory TestResults
          reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:coverage-report -reporttypes:SonarQube

      - name: End SonarQube Analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}"

