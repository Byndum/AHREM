name: DevOps Workflow

on:
  push:
    branches:
      - master

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate test and analysis

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install tools
        run: |
          dotnet tool install -g dotnet-stryker
          dotnet tool install -g dotnet-reportgenerator-globaltool
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Restore and Build
        run: |
          dotnet restore
          dotnet build --configuration Release

      - name: Run Unit Tests
        run: |
          dotnet test Tests/AHREM.API.Tests/ --collect:"XPlat Code Coverage" --results-directory Tests/AHREM.API.Tests/TestResults

      - name: Generate Coverage Report
        if: always()
        run: |
          reportgenerator \
            -reports:"Tests/AHREM.API.Tests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:Tests/AHREM.API.Tests/coverage-report \
            -reporttypes:Html

      - name: Run Mutation Tests
        if: always()
        run: |
          cd Tests/AHREM.API.Tests/
          dotnet stryker --break-at 80

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Coverages
          path: Tests/AHREM.API.Tests/coverage-report/

      - name: Upload Stryker Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mutants
          path: Tests/AHREM.API.Tests/StrykerOutput/
